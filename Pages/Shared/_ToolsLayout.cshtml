@using MyWebApp.Models;
@using MyWebApp.Utils;
@{
    Layout = "_Layout";
    var title = ViewData["Title"]?.ToString();
    var toolId = ViewData["ToolId"]?.ToString();
    MetaData? toolsMeta = SiteConfig.Content.Tools.Meta;
    MetaData? currentMeta = toolsMeta;
    
    if (string.IsNullOrEmpty(toolId))
    {
        ViewData["Title"] = SiteConfig.Content.Tools.Id;
    }
    else
    {
        var tool = SiteConfig.Content.Tools.Items.FirstOrDefault(x => x.Id == toolId);
        currentMeta = tool?.Meta;

        ViewData["Title"] = tool?.Id + " | " + SiteConfig.Content.Tools.Id;
        ViewData["ToolName"] = tool?.Name;
        ViewData["ToolDescription"] = tool?.Description;
        ViewData["ToolIcon"] = tool?.Icon;
    }

    // Meta Tags
    ViewData["Description"] = currentMeta?.Description ?? toolsMeta?.Description;
    ViewData["Keywords"] = currentMeta?.Keywords ?? toolsMeta?.Keywords;
    ViewData["OgType"] = currentMeta?.OgType ?? toolsMeta?.OgType;
    ViewData["Image"] = currentMeta?.Image ?? toolsMeta?.Image;
    ViewData["TwitterCard"] = currentMeta?.TwitterCard ?? toolsMeta?.TwitterCard;
}

@section Styles {
    @await RenderSectionAsync("Styles", required: false)
}

<!-- Tools Header -->
<div class="relative bg-gradient-to-br from-[#238636]/90 via-[#2ea043]/90 to-[#3fb950]/90 dark:from-[#238636]/80 dark:via-[#2ea043]/80 dark:to-[#3fb950]/80 overflow-hidden">
    <div class="absolute inset-0 overflow-hidden">
        <div class="absolute -top-1/2 -right-1/2 w-full h-full rounded-full bg-white/5 animate-pulse"></div>
        <div class="absolute -bottom-1/2 -left-1/2 w-full h-full rounded-full bg-white/5 animate-pulse delay-1000"></div>
    </div>

    <div class="absolute inset-0 opacity-10 group-hover:opacity-20 transition-opacity">
        <div class="absolute inset-0 backdrop-blur-[100px]"></div>
        <svg class="w-full h-full" viewBox="0 0 100 100" preserveAspectRatio="none">
            <pattern id="tool-grid" width="8" height="8" patternUnits="userSpaceOnUse" patternTransform="rotate(45)">
                <path d="M0 8L8 0M-1 1L1 -1M7 9L9 7" stroke="currentColor" stroke-width="0.5"/>
            </pattern>
            <rect width="100%" height="100%" fill="url(#tool-grid)"/>
        </svg>
    </div>

    <!-- Content Container -->
    <div class="container mx-auto px-4 py-12 sm:py-16 relative">
        <div class="flex items-center justify-between" data-aos="fade-up">
            <div class="text-right">
                <h1 class="text-2xl sm:text-3xl md:text-4xl font-bold text-white mb-2 sm:mb-3 flex items-center gap-2 sm:gap-3">
                    <div class="w-1.5 h-1.5 sm:w-2 sm:h-2 rounded-full bg-white/50 animate-pulse"></div>
                    <span class="relative">
                        @{
                            var toolName = ViewData["ToolName"]?.ToString() ?? SiteConfig.Content.Tools.Title;
                        }
                        @toolName
                        <span class="absolute bottom-0 left-0 w-full h-[2px] bg-white/20 transform scale-x-0 group-hover/title:scale-x-100 transition-transform origin-right"></span>
                    </span>
                </h1>
                <p class="text-sm sm:text-base text-white/80 max-w-xl mr-auto">
                    @{
                        var toolDescription = ViewData["ToolDescription"]?.ToString() ?? SiteConfig.Content.Tools.Description;
                    }
                    @toolDescription
                </p>
            </div>

            <div class="relative group/icon">
                <div class="absolute inset-0 bg-gradient-to-r from-white/20 to-transparent rounded-2xl group-hover/icon:rotate-180 transition-transform duration-700"></div>
                <div class="absolute inset-0 bg-white/20 dark:bg-white/10 blur-xl rounded-2xl group-hover/icon:scale-110 transition-transform duration-300"></div>
                <div class="relative bg-white/10 dark:bg-white/5 backdrop-blur-xl p-4 sm:p-6 rounded-2xl group-hover/icon:bg-white/20 transition-all duration-300">
                    @{
                        var toolIcon = ViewData["ToolIcon"]?.ToString() ?? "fas fa-list";
                    }
                    <i class="@toolIcon text-3xl sm:text-4xl text-white transform group-hover/icon:scale-110 transition-transform"></i>
                </div>
                <div class="absolute inset-0 bg-white/30 rounded-2xl blur-xl opacity-0 group-hover/icon:opacity-100 transition-opacity duration-300"></div>
                <div class="absolute -inset-2 opacity-0 group-hover/icon:opacity-100 transition-opacity duration-300 pointer-events-none">
                    <div class="absolute top-0 right-0 w-1.5 h-1.5 sm:w-2 sm:h-2 bg-white rounded-full animate-ping"></div>
                    <div class="absolute bottom-0 left-0 w-1.5 h-1.5 sm:w-2 sm:h-2 bg-white rounded-full animate-ping delay-300"></div>
                    <div class="absolute top-1/2 left-0 w-1.5 h-1.5 sm:w-2 sm:h-2 bg-white rounded-full animate-ping delay-700"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Breadcrumb -->
<div class="sticky top-16 inset-x-0 z-40 bg-white/80 dark:bg-slate-900/80 backdrop-blur-lg border-y border-slate-200/50 dark:border-slate-800/50">
    <div class="container mx-auto px-4">
        <nav class="py-3 sm:py-4">
            <ol class="flex items-center space-x-3 sm:space-x-4 space-x-reverse text-xs sm:text-sm">
                <li class="group/home">
                    @{
                        var home = SiteConfig.Content.Header.MenuItems.First();
                    }
                    <a href="@StringUtils.ToUrl(home.Url)" class="flex items-center gap-1.5 sm:gap-2 text-slate-600 dark:text-slate-400 hover:text-slate-900 dark:hover:text-white transition-colors">
                        <i class="@home.Icon text-[#238636] dark:text-[#3fb950] text-sm sm:text-base group-hover/home:scale-110 transition-transform"></i>
                        <span class="relative">@home.Title</span>
                    </a>
                </li>

                <li>
                    <i class="fas fa-chevron-left text-slate-400 dark:text-slate-600 text-xs sm:text-sm"></i>
                </li>

                @if (!string.IsNullOrEmpty(ViewData["ToolName"]?.ToString()))
                {
                    <li>
                        <a href="@StringUtils.ToUrl($"/{SiteConfig.Content.Tools.Id}")" class="flex items-center gap-1.5 sm:gap-2 text-slate-600 dark:text-slate-400 hover:text-slate-900 dark:hover:text-white transition-colors">
                            <i class="@SiteConfig.Content.Tools.Icon text-[#238636] dark:text-[#3fb950] text-sm sm:text-base"></i>
                            <span class="relative">@SiteConfig.Content.Tools.Title</span>
                        </a>
                    </li>

                    <li>
                        <i class="fas fa-chevron-left text-slate-400 dark:text-slate-600 text-xs sm:text-sm"></i>
                    </li>

                    <li class="flex items-center gap-1.5 sm:gap-2 text-slate-900 dark:text-white">
                        <i class="@ViewData["ToolIcon"] text-[#238636] dark:text-[#3fb950] text-sm sm:text-base"></i>
                        <span class="font-medium">@ViewData["ToolName"]</span>
                    </li>
                }
                else
                {
                    <li class="flex items-center gap-1.5 sm:gap-2 text-slate-900 dark:text-white">
                        <i class="@SiteConfig.Content.Tools.Icon text-[#238636] dark:text-[#3fb950] text-sm sm:text-base"></i>
                        <span class="font-medium">@SiteConfig.Content.Tools.Title</span>
                    </li>
                }
            </ol>
        </nav>
    </div>
</div>

<!-- Main Content -->
<div class="container mx-auto px-4 py-6 sm:py-8">
    @RenderBody()
</div>

@section Scripts {
    @await RenderSectionAsync("Scripts", required: false)
}